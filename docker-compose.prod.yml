# Production docker-compose configuration
version: '3.8'

services:
  # 백엔드 서비스
  backend:
    build:
      context: ./backend
      target: development
    container_name: woodie-backend
    environment:
      - NODE_ENV=production
      - PORT=3001
      - JWT_SECRET=${JWT_SECRET:-woodie_campus_jwt_secret_key_2025}
      - JWT_EXPIRES_IN=${JWT_EXPIRES_IN:-24h}
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_ANON_KEY=${SUPABASE_ANON_KEY}
      - SUPABASE_SERVICE_ROLE_KEY=${SUPABASE_SERVICE_ROLE_KEY}
      - AUTO_SEED_ADMIN=true
    networks:
      - woodie-network
    restart: unless-stopped
    depends_on:
      - db

  # 프론트엔드 서비스
  frontend:
    build:
      context: ./frontend
      target: development
      args:
        - VITE_API_BASE_URL=/api
        - VITE_SUPABASE_URL=${SUPABASE_URL}
        - VITE_SUPABASE_ANON_KEY=${SUPABASE_ANON_KEY}
    container_name: woodie-frontend
    environment:
      - VITE_API_BASE_URL=/api
      - VITE_SUPABASE_URL=${SUPABASE_URL}
      - VITE_SUPABASE_ANON_KEY=${SUPABASE_ANON_KEY}
      - VITE_DEV_MODE=false
    networks:
      - woodie-network
    restart: unless-stopped
    depends_on:
      - backend

  # PostgreSQL 데이터베이스 (로컬 개발용, 선택사항)
  db:
    image: postgres:15-alpine
    container_name: woodie-postgres
    ports:
      - "5433:5432"
    environment:
      - POSTGRES_DB=woodie_campus
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres_password}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - woodie-network
    restart: unless-stopped

  # Nginx 리버스 프록시
  nginx:
    build:
      context: ./nginx
    container_name: woodie-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./uploads:/app/uploads:rw
    networks:
      - woodie-network
    depends_on:
      - frontend
      - backend
    restart: unless-stopped

  # Redis (캐싱용, 선택사항)
  redis:
    image: redis:7-alpine
    container_name: woodie-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - woodie-network
    restart: unless-stopped

networks:
  woodie-network:
    driver: bridge

volumes:
  postgres_data:
  redis_data: