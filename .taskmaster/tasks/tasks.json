{
  "master": {
    "tasks": [
      {
        "id": 18,
        "title": "문제집 배포 대상 선택 시스템 구현",
        "description": "개별 학생, 커스텀 그룹, 반 전체 중 배포 대상을 선택할 수 있는 UI 및 백엔드 로직 구현",
        "details": "1. 배포 대상 선택 UI 컴포넌트 생성: 라디오 버튼 또는 드롭다운으로 '개별 학생', '커스텀 그룹', '반 전체' 선택 옵션 제공\n2. 개별 학생 선택 시: 학생 목록 체크박스 또는 다중 선택 가능한 드롭다운\n3. 커스텀 그룹 선택 시: 기존 그룹 목록 표시 또는 새 그룹 생성 기능\n4. 반 전체 선택 시: 해당 반의 모든 학생 자동 포함\n5. 백엔드 API: POST /api/workbooks/{id}/assign 엔드포인트 구현\n6. 데이터베이스 스키마: workbook_assignments 테이블에 target_type('individual', 'group', 'class'), target_ids(JSON 배열) 필드 추가\n7. 권한 검증: 교사만 자신이 담당하는 반/학생에게 배포 가능하도록 제한",
        "testStrategy": "1. 각 배포 대상 선택 옵션별 UI 렌더링 테스트\n2. 학생/그룹 선택 시 올바른 데이터 전송 확인\n3. API 엔드포인트 단위 테스트: 각 target_type별 데이터 저장 검증\n4. 권한 테스트: 다른 반 학생 배포 시도 시 오류 반환 확인\n5. E2E 테스트: 전체 배포 프로세스 시나리오 검증",
        "priority": "high",
        "dependencies": [],
        "status": "done",
        "subtasks": [
          {
            "id": 1,
            "title": "배포 대상 선택 UI 컴포넌트 구현",
            "description": "개별 학생, 커스텀 그룹, 반 전체 선택을 위한 라디오 버튼 기반 UI 컴포넌트 개발",
            "dependencies": [],
            "details": "React 컴포넌트로 배포 대상 타입 선택 라디오 버튼 그룹 구현. 선택된 타입에 따라 하위 선택 옵션이 동적으로 표시되도록 상태 관리. 접근성을 고려한 ARIA 라벨 및 키보드 내비게이션 지원",
            "status": "done",
            "testStrategy": ""
          },
          {
            "id": 2,
            "title": "개별 학생 및 커스텀 그룹 선택 기능 구현",
            "description": "학생 목록 다중 선택 체크박스와 그룹 관리 기능 개발",
            "dependencies": [
              "18.1"
            ],
            "details": "학생 목록 API 연동 후 체크박스 기반 다중 선택 UI 구현. 기존 커스텀 그룹 목록 표시 및 새 그룹 생성 모달 구현. 검색 및 필터링 기능으로 사용자 편의성 향상. 선택된 대상 미리보기 기능 추가",
            "status": "done",
            "testStrategy": ""
          },
          {
            "id": 3,
            "title": "반 전체 선택 로직 및 자동 포함 시스템 구현",
            "description": "반 전체 선택 시 해당 반 모든 학생을 자동으로 포함하는 로직 구현",
            "dependencies": [
              "18.1"
            ],
            "details": "교사가 담당하는 반 목록 조회 API 연동. 반 선택 시 해당 반의 모든 활성 학생을 자동으로 대상에 포함하는 로직 구현. 학생 수 및 선택된 학생 목록 미리보기 표시. 비활성 학생 처리 로직 포함",
            "status": "done",
            "testStrategy": ""
          },
          {
            "id": 4,
            "title": "문제집 배포 API 및 데이터베이스 스키마 구현",
            "description": "POST /api/workbooks/{id}/assign 엔드포인트 및 workbook_assignments 테이블 구현",
            "dependencies": [],
            "details": "workbook_assignments 테이블에 target_type(ENUM), target_ids(JSON), created_at, updated_at 필드 추가. Express.js 기반 POST API 엔드포인트 구현. 요청 데이터 유효성 검증 미들웨어 추가. 트랜잭션 처리로 데이터 일관성 보장",
            "status": "done",
            "testStrategy": ""
          },
          {
            "id": 5,
            "title": "교사 권한 검증 및 보안 시스템 구현",
            "description": "교사가 담당하는 반/학생에게만 배포할 수 있도록 하는 권한 검증 로직 구현",
            "dependencies": [
              "18.4"
            ],
            "details": "JWT 토큰 기반 교사 인증 확인. 교사-반-학생 관계 테이블 조회로 배포 권한 검증. 다른 교사의 학생/반에 배포 시도 시 403 에러 반환. 권한 검증 미들웨어 구현으로 재사용성 확보. 로그 시스템으로 권한 위반 시도 추적",
            "status": "done",
            "testStrategy": ""
          }
        ]
      },
      {
        "id": 19,
        "title": "문제집 배포 일정 관리 시스템 구현",
        "description": "즉시 배포 또는 예약 배포 기능을 제공하는 스케줄링 시스템 구현",
        "details": "1. 배포 일정 선택 UI: '즉시 배포' 라디오 버튼과 '예약 배포' 라디오 버튼\n2. 예약 배포 선택 시: 날짜/시간 선택 컴포넌트(DateTimePicker) 표시\n3. 백엔드 스케줄러: Node.js cron 또는 node-schedule 라이브러리 사용\n4. 데이터베이스 스키마: workbook_assignments 테이블에 scheduled_at(DATETIME), is_scheduled(BOOLEAN) 필드 추가\n5. 스케줄 작업 큐: 예약된 배포를 관리하는 작업 큐 시스템 구현\n6. 배포 실행 로직: 예약 시간 도달 시 자동으로 배포 상태를 'active'로 변경\n7. 스케줄 취소/수정 기능: 예약된 배포의 취소 또는 시간 수정 API",
        "testStrategy": "1. 즉시 배포 시 실시간 배포 상태 변경 확인\n2. 예약 배포 설정 시 데이터베이스에 올바른 스케줄 정보 저장 검증\n3. 스케줄러 동작 테스트: 설정된 시간에 배포 실행 확인\n4. 스케줄 취소/수정 기능 테스트\n5. 다중 예약 배포 처리 성능 테스트",
        "priority": "high",
        "dependencies": [
          18
        ],
        "status": "pending",
        "subtasks": [
          {
            "id": 1,
            "title": "배포 일정 선택 UI 컴포넌트 구현",
            "description": "즉시 배포와 예약 배포를 선택할 수 있는 라디오 버튼 UI 구현",
            "dependencies": [],
            "details": "즉시 배포와 예약 배포 라디오 버튼, 선택 상태에 따른 조건부 렌더링 로직, 상태 관리 및 부모 컴포넌트로의 데이터 전달",
            "status": "pending",
            "testStrategy": ""
          },
          {
            "id": 2,
            "title": "예약 배포 날짜/시간 선택 컴포넌트 구현",
            "description": "예약 배포 선택 시 표시되는 DateTimePicker 컴포넌트 구현",
            "dependencies": [
              "19.1"
            ],
            "details": "DateTimePicker 라이브러리 선택 및 설치, 날짜/시간 선택 UI, 유효성 검증(과거 날짜 제한), 선택된 날짜/시간 포맷팅",
            "status": "pending",
            "testStrategy": ""
          },
          {
            "id": 3,
            "title": "데이터베이스 스키마 확장 및 마이그레이션",
            "description": "workbook_assignments 테이블에 스케줄링 관련 필드 추가",
            "dependencies": [],
            "details": "scheduled_at(DATETIME), is_scheduled(BOOLEAN) 필드 추가, 마이그레이션 파일 생성, 기존 데이터 호환성 확보, 인덱스 설정",
            "status": "pending",
            "testStrategy": ""
          },
          {
            "id": 4,
            "title": "백엔드 스케줄러 시스템 및 작업 큐 구현",
            "description": "Node.js cron을 사용한 스케줄러 시스템과 예약 작업 관리 큐 구현",
            "dependencies": [
              "19.3"
            ],
            "details": "node-schedule 라이브러리 설치 및 설정, 작업 큐 시스템 구현, 스케줄 작업 등록/해제 로직, 메모리 기반 작업 관리",
            "status": "pending",
            "testStrategy": ""
          },
          {
            "id": 5,
            "title": "자동 배포 실행 로직 구현",
            "description": "예약 시간 도달 시 자동으로 배포 상태를 변경하는 실행 로직 구현",
            "dependencies": [
              "19.4"
            ],
            "details": "스케줄된 시간에 실행되는 배포 함수, 배포 상태를 'active'로 변경하는 로직, 오류 처리 및 재시도 메커니즘, 배포 완료 로그 기록",
            "status": "pending",
            "testStrategy": ""
          },
          {
            "id": 6,
            "title": "스케줄 취소/수정 API 구현",
            "description": "예약된 배포의 취소 또는 시간 수정을 위한 API 엔드포인트 구현",
            "dependencies": [
              "19.4"
            ],
            "details": "PUT /api/workbooks/{id}/schedule, DELETE /api/workbooks/{id}/schedule API 구현, 스케줄 작업 취소/수정 로직, 권한 검증, API 문서화",
            "status": "pending",
            "testStrategy": ""
          }
        ]
      },
      {
        "id": 20,
        "title": "문제집 기한 설정 및 관리 시스템 구현",
        "description": "문제집별 시작일과 마감일을 설정하고 관리하는 시스템 구현",
        "details": "1. 기한 설정 UI: 시작일과 마감일을 선택할 수 있는 DatePicker 컴포넌트\n2. 유효성 검증: 시작일 < 마감일 조건 확인, 과거 날짜 선택 방지\n3. 데이터베이스 스키마: workbook_assignments 테이블에 start_date, due_date 필드 추가\n4. 기한 상태 관리: 'upcoming'(시작 전), 'active'(진행 중), 'overdue'(기한 초과), 'completed'(완료) 상태\n5. 자동 상태 업데이트: 매일 자정에 실행되는 크론 작업으로 기한 상태 자동 업데이트\n6. 기한 알림 시스템: 마감일 임박 시 알림 발송 로직\n7. 기한 연장 기능: 교사가 개별 학생의 기한을 연장할 수 있는 기능",
        "testStrategy": "1. 날짜 선택 UI 유효성 검증 테스트\n2. 기한 상태 자동 업데이트 크론 작업 테스트\n3. 기한별 문제집 필터링 및 정렬 기능 테스트\n4. 기한 연장 권한 및 로직 테스트\n5. 알림 발송 조건 및 타이밍 테스트",
        "priority": "medium",
        "dependencies": [
          19
        ],
        "status": "pending",
        "subtasks": []
      },
      {
        "id": 21,
        "title": "학생 문제집 접근 권한 제어 시스템 구현",
        "description": "학생이 배포된 문제집만 접근할 수 있도록 하는 권한 제어 시스템 구현",
        "details": "1. 학생 대시보드 문제집 목록: 배포된 문제집만 표시하는 필터링 로직\n2. API 권한 검증: GET /api/workbooks/{id} 엔드포인트에서 학생 접근 권한 확인\n3. 데이터베이스 쿼리 최적화: JOIN을 활용한 배포된 문제집 조회 쿼리\n4. 프론트엔드 라우팅 가드: 미배포 문제집 URL 직접 접근 시 403 에러 페이지 표시\n5. 문제집 상태별 접근 제어: 'upcoming' 상태 문제집은 시작일 전까지 접근 제한\n6. 실시간 접근 권한 업데이트: WebSocket 또는 Server-Sent Events로 배포 상태 변경 시 즉시 반영\n7. 캐싱 전략: Redis를 활용한 학생별 접근 가능 문제집 목록 캐싱",
        "testStrategy": "1. 배포되지 않은 문제집 접근 시 403 에러 반환 확인\n2. 학생별 문제집 목록 필터링 정확성 테스트\n3. 시작일 전 문제집 접근 제한 테스트\n4. 다른 학생 계정으로 타인 배포 문제집 접근 시도 테스트\n5. 실시간 권한 업데이트 동작 확인\n6. 캐싱 무효화 및 업데이트 로직 테스트",
        "priority": "high",
        "dependencies": [
          20
        ],
        "status": "pending",
        "subtasks": []
      },
      {
        "id": 22,
        "title": "문제집 배포 현황 및 관리 대시보드 구현",
        "description": "교사가 배포한 문제집의 현황을 조회하고 관리할 수 있는 대시보드 구현",
        "details": "1. 배포 현황 테이블: 문제집명, 배포 대상, 배포일, 기한, 완료율 등 정보 표시\n2. 필터링 옵션: 배포 상태(활성/예약/완료), 기한 상태, 배포 대상별 필터\n3. 학생별 진행률 상세 보기: 개별 학생의 문제 풀이 현황 모달\n4. 일괄 기한 연장 기능: 여러 학생의 기한을 한 번에 연장\n5. 배포 취소/수정 기능: 활성 상태 배포의 기한 수정 또는 취소\n6. 통계 차트: Chart.js를 활용한 완료율, 평균 점수 시각화\n7. 엑셀 내보내기: 배포 현황 및 학생 성과 데이터 엑셀 파일 생성\n8. 알림 설정: 기한 임박, 미제출 학생 알림 설정",
        "testStrategy": "1. 배포 현황 데이터 정확성 및 실시간 업데이트 확인\n2. 필터링 및 정렬 기능 동작 테스트\n3. 일괄 작업(기한 연장, 배포 취소) 기능 테스트\n4. 통계 차트 데이터 정확성 및 렌더링 테스트\n5. 엑셀 내보내기 기능 및 파일 형식 검증\n6. 권한별 접근 제어 테스트(교사만 접근 가능)",
        "priority": "medium",
        "dependencies": [
          21
        ],
        "status": "pending",
        "subtasks": []
      }
    ],
    "metadata": {
      "created": "2025-08-26T06:14:02.321Z",
      "updated": "2025-08-29T06:49:52.653Z",
      "description": "Tasks for master context"
    }
  }
}