{
	"meta": {
		"generatedAt": "2025-08-26T06:18:18.367Z",
		"tasksAnalyzed": 10,
		"totalTasks": 10,
		"analysisCount": 10,
		"thresholdScore": 5,
		"projectName": "Taskmaster",
		"usedResearch": false
	},
	"complexityAnalysis": [
		{
			"taskId": 1,
			"taskTitle": "프로젝트 초기 설정 및 환경 구성",
			"complexityScore": 8,
			"recommendedSubtasks": 7,
			"expansionPrompt": "React + Vite 프론트엔드, Node.js + Express 백엔드, Docker Compose 환경, Nginx 설정, Supabase 연동을 각각 독립적인 하위 작업으로 세분화하여 체계적으로 구축하세요.",
			"reasoning": "다양한 기술 스택의 초기 설정이 필요하고 각 컴포넌트 간의 통합이 복잡합니다. Docker, 프론트엔드/백엔드 분리, 데이터베이스 연동 등 여러 기술이 포함되어 있어 높은 복잡도를 가집니다."
		},
		{
			"taskId": 2,
			"taskTitle": "데이터베이스 스키마 설계 및 구축",
			"complexityScore": 7,
			"recommendedSubtasks": 6,
			"expansionPrompt": "각 테이블(users, problems, workbooks, workbook_problems, attempts, reviews)을 개별적으로 설계하고 생성한 후, 관계 설정, 인덱스 최적화, 제약조건을 단계별로 적용하세요.",
			"reasoning": "6개의 상호 연관된 테이블과 복잡한 관계 설정, 성능 최적화를 위한 인덱스 설계가 필요합니다. 데이터 무결성과 성능을 모두 고려해야 하는 중-고 복잡도 작업입니다."
		},
		{
			"taskId": 3,
			"taskTitle": "사용자 인증 시스템 구현",
			"complexityScore": 8,
			"recommendedSubtasks": 6,
			"expansionPrompt": "비밀번호 해시 처리, JWT 토큰 관리, 역할별 권한 미들웨어, 로그인/로그아웃 엔드포인트, 세션 관리, 보안 에러 핸들링을 각각 독립적인 모듈로 구현하세요.",
			"reasoning": "보안이 중요한 인증 시스템으로 bcrypt, JWT, 역할 기반 접근 제어 등 여러 보안 기술을 통합해야 합니다. 보안 취약점 방지와 다양한 시나리오 처리가 필요한 고복잡도 작업입니다."
		},
		{
			"taskId": 4,
			"taskTitle": "관리자 계정 관리 기능 구현",
			"complexityScore": 6,
			"recommendedSubtasks": 5,
			"expansionPrompt": "권한 검증 미들웨어, 계정 CRUD API, 페이징/필터링 기능, 시드 데이터 생성, 관리자 UI 컴포넌트를 순차적으로 구현하세요.",
			"reasoning": "기본적인 CRUD 기능에 권한 관리가 추가된 형태입니다. 복잡한 비즈니스 로직보다는 표준적인 관리 기능이 주를 이루므로 중간 복잡도입니다."
		},
		{
			"taskId": 5,
			"taskTitle": "문제 관리 시스템 구현",
			"complexityScore": 7,
			"recommendedSubtasks": 6,
			"expansionPrompt": "문제 CRUD API, 이미지 업로드 시스템, 드래그앤드롭 UI, 문제 유형별 폼, 미리보기 기능, 이미지 최적화를 각각 구현하여 통합하세요.",
			"reasoning": "파일 업로드, 다양한 문제 유형 처리, UI 인터랙션이 복합적으로 필요합니다. Supabase Storage 연동과 이미지 최적화 등 기술적 도전이 있는 중-고 복잡도 작업입니다."
		},
		{
			"taskId": 6,
			"taskTitle": "문제집 관리 시스템 구현",
			"complexityScore": 6,
			"recommendedSubtasks": 5,
			"expansionPrompt": "문제집 CRUD, 문제 매핑 관리, 순서 변경 기능, 검색/선택 UI, 배포 상태 관리를 단계별로 구현하세요.",
			"reasoning": "관계형 데이터 관리와 드래그앤드롭 UI가 주요 복잡성입니다. 표준적인 관리 시스템의 확장으로 중간 복잡도를 가집니다."
		},
		{
			"taskId": 7,
			"taskTitle": "학생 문제 풀이 시스템 구현",
			"complexityScore": 7,
			"recommendedSubtasks": 6,
			"expansionPrompt": "문제 렌더링 UI, 답안 제출/검증 API, 풀이 기록 저장, 진행률 계산, 시간 측정, 반응형 UI를 각각 구현하여 완전한 풀이 시스템을 구축하세요.",
			"reasoning": "실시간 상호작용, 다양한 문제 유형 지원, 시간 측정, 모바일 대응 등이 필요합니다. 사용자 경험과 데이터 처리가 복합적으로 요구되는 중-고 복잡도 작업입니다."
		},
		{
			"taskId": 8,
			"taskTitle": "에빙하우스 망각곡선 기반 복습 스케줄링 시스템 구현",
			"complexityScore": 9,
			"recommendedSubtasks": 7,
			"expansionPrompt": "복습 알고리즘 설계, 스케줄 생성 로직, 일일 복습 계산, 우선순위 시스템, 백그라운드 배치 작업, 성능 최적화, 알림 시스템을 체계적으로 구현하세요.",
			"reasoning": "복잡한 알고리즘과 배치 처리, 대량 데이터 성능 최적화가 필요합니다. 에빙하우스 망각곡선 이론을 시스템으로 구현하는 것은 높은 기술적 도전을 요구하는 고복잡도 작업입니다."
		},
		{
			"taskId": 9,
			"taskTitle": "역할별 대시보드 구현",
			"complexityScore": 6,
			"recommendedSubtasks": 5,
			"expansionPrompt": "학생/교사/관리자별 대시보드 UI, 복습 필터링 로직, 진행률 시각화, 라우팅 가드, 반응형 레이아웃을 역할별로 구현하세요.",
			"reasoning": "3가지 역할별 UI와 데이터 시각화가 필요하지만, 기본적인 대시보드 패턴을 따르는 중간 복잡도 작업입니다. 주로 프론트엔드 개발과 데이터 표시가 중심입니다."
		},
		{
			"taskId": 10,
			"taskTitle": "UI/UX 디자인 시스템 적용 및 최종 통합 테스트",
			"complexityScore": 7,
			"recommendedSubtasks": 6,
			"expansionPrompt": "디자인 시스템 적용, 접근성 기준 준수, 반응형 레이아웃, E2E 테스트, 성능 최적화, SEO 설정을 체계적으로 진행하여 완성도 높은 시스템을 구축하세요.",
			"reasoning": "전체 시스템의 일관성 확보, 접근성 준수, 성능 최적화 등 품질 보증이 중심입니다. 기술적 구현보다는 품질 검증과 최적화에 집중하는 중-고 복잡도 작업입니다."
		}
	]
}